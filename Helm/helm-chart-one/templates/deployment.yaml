{{- if eq .Values.rollout.enabled "false" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
      maxSurge: {{ .Values.maxSurge }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      app.kubernetes.io/name: {{ include "common.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- if .Values.podannotation.enabled }}
      annotations:
      {{- with .Values.podannotation.annotation }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.podannotation.checksum.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/app-configmap.yaml") . | sha256sum }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}
        app.kubernetes.io/name: {{ include "common.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.istioRevision.enabled }}
        istio.io/rev: {{ .Values.istioRevision.version | default "default" }}
        {{- end }}
    spec:
    {{- if .Values.dnsconfig.enabled }}
      dnsConfig:
        options:
          - name: attempts
            value: "3"
    {{- end }}
    {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecrets }}
    {{- end }}
    {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "common.name" . }}
    {{- end }} 
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 60  }}
      {{- if .Values.extraVolumes }}
      volumes:
        {{- toYaml .Values.extraVolumes  | nindent 8  }}
      {{- end }}
      {{- if .Values.extraInitContainers }}
      initContainers:
        {{- toYaml  .Values.extraInitContainers | nindent 8 }}
      {{- end }}
      containers:
      {{- if .Values.sidecar }}
      {{- if  lt (len .Values.sidecar) 3 }}
      {{- toYaml .Values.sidecar | nindent 8 }}
      {{- end }}
      {{- end }}
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.container }}
{{- if .Values.container.command }}
          command: 
          - {{ .Values.container.command }}
{{- end }}
{{- if .Values.container.args }}
          args:
{{- range $key, $value := .Values.container.args }}
    {{- if $value }}
          - --{{ $key }}={{ $value }}
    {{- else }}
          - --{{ $key }}
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.image.port }}
              protocol: TCP    
{{- range $i, $port := .Values.extraPorts }}
            - name: {{ $port.name }}
              containerPort: {{ $port.targetPort }}
              protocol: {{ default "TCP" $port.protocol }}
{{- end }}      
          envFrom:
            {{- if .Values.configvalues }}
            - configMapRef:
                name: {{ include "common.fullname" . }}
            {{- end }}
            {{- if .Values.secrets.enabled }}
            - secretRef:
                name: {{ include "common.fullname" . }}
            {{- end }}
            {{- if .Values.externalsecrets.enabled }}
            - secretRef:
                name: {{ include "common.fullname" . }}
            {{- end }}  
            {{- if .Values.localsecrets.enabled }}
            - secretRef:
                name: {{ if .Values.localsecrets.name }}{{ .Values.localsecrets.name }}{{ else }}{{ include "common.fullname" . }}{{ end }}
            {{- end }}  
        {{- if .Values.extraVolumeMounts }}
          volumeMounts:
            {{- toYaml  .Values.extraVolumeMounts  | nindent 12  }}
        {{- end }}      
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.health_url }}
              port: {{ .Values.image.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.health_url }}
              port: {{ .Values.image.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
